<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:converters="clr-namespace:Creobe.VoiceMemos.ValueConverters" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="Creobe.VoiceMemos.App"
    >

    <!--Application Resources-->
    <Application.Resources>
        <local:LocalizedStrings xmlns:local="clr-namespace:Creobe.VoiceMemos" x:Key="LocalizedStrings"/>
        
        <locators:ViewModelLocator xmlns:locators="clr-namespace:Creobe.VoiceMemos.Locators" x:Key="ViewModelLocator"/>
        <converters:IsolatedStoragePathConverter x:Key="IsolatedStoragePathConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:MemoGeoCoordinateConverter x:Key="MemoGeoCoordinateConverter"/>
        <converters:EmptyToVisibilityConverter x:Key="EmptyToVisibilityConverter"/>
        <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>

        <Style x:Key="FlatButtonStyle" TargetType="Button">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="Button">
        				<Grid Background="Transparent">
        					<Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
        						<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
        					</Border>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="Padding" Value="0"/>
        </Style>
    	<Style x:Key="KeyButtonStyle" TargetType="Button">
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="Button">
    					<Grid Background="Transparent">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Pressed">
    									<Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightRectangle" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="ContentContainer">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneContrastForegroundBrush}"/>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="Disabled"/>
    								<VisualState x:Name="MouseOver"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Rectangle Fill="{StaticResource PhoneProgressBarBackgroundBrush}" Visibility="{StaticResource PhoneDarkThemeVisibility}"/>
    						<Rectangle Fill="{StaticResource PhoneBackgroundBrush}" Visibility="{StaticResource PhoneLightThemeVisibility}"/>
    						<Rectangle x:Name="HighlightRectangle" Fill="{StaticResource PhoneAccentBrush}" Opacity="0"/>
                            <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe Ui Symbol" FontSize="{StaticResource PhoneFontSizeExtraLarge}" Foreground="{StaticResource PhoneForegroundBrush}" />
                        </Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Padding" Value="0"/>
    	</Style>
        <Style x:Key="ContentKeyButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="contentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneContrastForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Fill="{StaticResource PhoneProgressBarBackgroundBrush}" Visibility="{StaticResource PhoneDarkThemeVisibility}"/>
                            <Rectangle Fill="{StaticResource PhoneBackgroundBrush}" Visibility="{StaticResource PhoneLightThemeVisibility}"/>
                            <Rectangle x:Name="rectangle" Fill="{StaticResource PhoneAccentBrush}" Opacity="0"/>
                            <ContentControl x:Name="contentControl" Template="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Key="ContentKeyToggleButtonStyle" TargetType="ToggleButton">
    		<Setter Property="Padding" Value="8"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="ToggleButton">
    					<Grid Background="Transparent">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EnabledBackground">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Collapsed</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledBackground">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed"/>
    								<VisualState x:Name="MouseOver"/>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="CheckStates">
    								<VisualState x:Name="Unchecked"/>
    								<VisualState x:Name="Checked">
    									<Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightRectangle" d:IsOptimized="True"/>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="EnabledContent">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<SolidColorBrush Color="White"/>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Border x:Name="EnabledBackground" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
    							<Grid>
    								<Rectangle Fill="{StaticResource PhoneProgressBarBackgroundBrush}" Visibility="{StaticResource PhoneDarkThemeVisibility}"/>
    								<Rectangle Fill="{StaticResource PhoneBackgroundBrush}" Visibility="{StaticResource PhoneLightThemeVisibility}"/>
                                    <Rectangle x:Name="HighlightRectangle" Fill="{StaticResource PhoneAccentBrush}" Opacity="0"/>
									<ContentControl x:Name="EnabledContent" Template="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Grid>
    						</Border>
    						<Border x:Name="DisabledBackground" BorderBrush="{StaticResource PhoneDisabledBrush}" Background="Transparent" IsHitTestVisible="False" Visibility="Collapsed">
    							<ContentControl x:Name="DisabledContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{StaticResource PhoneDisabledBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						</Border>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        
    </Application.Resources>

    <Application.ApplicationLifetimeObjects>
        <!--Required object that handles lifetime events for the application-->
        <shell:PhoneApplicationService
            Launching="Application_Launching" Closing="Application_Closing"
            Activated="Application_Activated" Deactivated="Application_Deactivated"
            RunningInBackground="Application_RunningInBackground"/>
    </Application.ApplicationLifetimeObjects>

</Application>